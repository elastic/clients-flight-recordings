{
  "api": "watcher.execute_watch",
  "file": "/test/platinum/watcher/execute_watch/80_foreach.yml",
  "name": "Test execute watch api with foreach action using an array",
  "origin": "yaml",
  "request": {
    "args": {
      "body": {
        "watch": {
          "actions": {
            "log_hits": {
              "foreach": "ctx.payload.values",
              "logging": {
                "text": "Logging {{ctx.payload._value}}"
              }
            }
          },
          "input": {
            "simple": {
              "values": [
                1,
                2,
                3
              ]
            }
          },
          "trigger": {
            "schedule": {
              "cron": "0 0 0 1 * ? 2099"
            }
          }
        }
      }
    }
  },
  "response": {
    "headers": {
      "content-length": "1384",
      "content-type": "application/json",
      "x-elastic-product": "Elasticsearch"
    },
    "payload": {
      "_id": "_inlined__a05cd8c9-ec69-4033-837e-ccd92ad71bee-2025-09-16T10:57:27.0424659Z",
      "watch_record": {
        "@timestamp": "2025-09-16T10:57:27.042449828Z",
        "condition": {
          "always": {
          }
        },
        "input": {
          "simple": {
            "values": [
              1,
              2,
              3
            ]
          }
        },
        "messages": [
        ],
        "node": "JmJGs8f8SqqXxbcA7TIK4Q",
        "result": {
          "actions": [
            {
              "foreach": [
                {
                  "logging": {
                    "logged_text": "Logging 1"
                  }
                },
                {
                  "logging": {
                    "logged_text": "Logging 2"
                  }
                },
                {
                  "logging": {
                    "logged_text": "Logging 3"
                  }
                }
              ],
              "id": "log_hits",
              "max_iterations": 100,
              "number_of_actions_executed": 3,
              "status": "success",
              "type": "logging"
            }
          ],
          "condition": {
            "met": true,
            "status": "success",
            "type": "always"
          },
          "execution_duration": 0,
          "execution_time": "2025-09-16T10:57:27.042Z",
          "input": {
            "payload": {
              "values": [
                1,
                2,
                3
              ]
            },
            "status": "success",
            "type": "simple"
          }
        },
        "state": "executed",
        "status": {
          "actions": {
            "log_hits": {
              "ack": {
                "state": "ackable",
                "timestamp": "2025-09-16T10:57:27.042Z"
              },
              "last_execution": {
                "successful": true,
                "timestamp": "2025-09-16T10:57:27.042Z"
              },
              "last_successful_execution": {
                "successful": true,
                "timestamp": "2025-09-16T10:57:27.042Z"
              }
            }
          },
          "execution_state": "executed",
          "last_checked": "2025-09-16T10:57:27.042Z",
          "last_met_condition": "2025-09-16T10:57:27.042Z",
          "state": {
            "active": true,
            "timestamp": "2025-09-16T10:57:27.042Z"
          },
          "version": -1
        },
        "trigger_event": {
          "manual": {
            "schedule": {
              "scheduled_time": "2025-09-16T10:57:27.042Z"
            }
          },
          "triggered_time": "2025-09-16T10:57:27.042Z",
          "type": "manual"
        },
        "user": "elastic",
        "watch_id": "_inlined_"
      }
    },
    "statusCode": 200
  }
}