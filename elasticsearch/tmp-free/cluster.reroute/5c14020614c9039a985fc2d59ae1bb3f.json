{
  "api": "cluster.reroute",
  "file": "/test/free/synonyms/110_synonyms_invalid.yml",
  "name": "Load index with non existent synonyms set and lenient set to false",
  "origin": "yaml",
  "request": {
    "args": {
      "retry_failed": true
    }
  },
  "response": {
    "headers": {
      "content-encoding": "gzip",
      "content-type": "application/json",
      "transfer-encoding": "chunked",
      "warning": "299 Elasticsearch-8.19.0-d55b61874ceb52b0776b06eec2366656cbce8086 \"The [state] field in the response to the reroute API is deprecated and will be removed in a future version. Specify ?metric=none to adopt the future behaviour.\"",
      "x-elastic-product": "Elasticsearch"
    },
    "payload": {
      "acknowledged": true,
      "state": {
        "blocks": {
        },
        "cluster_uuid": "iq94eyFIReuLfx2PvmYOUg",
        "health": {
          "disk": {
            "flood_stage_max_headroom": "100gb",
            "flood_stage_watermark": "95%",
            "frozen_flood_stage_max_headroom": "20gb",
            "frozen_flood_stage_watermark": "95%",
            "high_max_headroom": "150gb",
            "high_watermark": "90%"
          },
          "shard_limits": {
            "max_shards_per_node": 1000,
            "max_shards_per_node_frozen": 3000
          }
        },
        "master_node": "saOB8sNLTpO_e-swjuRA9A",
        "nodes": {
          "saOB8sNLTpO_e-swjuRA9A": {
            "attributes": {
              "ml.allocated_processors": "2",
              "ml.allocated_processors_double": "2.0",
              "ml.config_version": "12.0.0",
              "ml.machine_memory": "16762277888",
              "ml.max_jvm_size": "1073741824",
              "testattr": "test",
              "transform.config_version": "10.0.0",
              "xpack.installed": "true"
            },
            "ephemeral_id": "OpSUjR1SR9SBKMt8-NoSTQ",
            "external_id": "instance",
            "max_index_version": 8527000,
            "min_index_version": 7000099,
            "name": "instance",
            "roles": [
              "data",
              "data_cold",
              "data_content",
              "data_frozen",
              "data_hot",
              "data_warm",
              "ingest",
              "master",
              "ml",
              "remote_cluster_client",
              "transform"
            ],
            "transport_address": "172.18.0.2:9300",
            "version": "8.19.0"
          }
        },
        "nodes_features": [
          {
            "features": [
              "cluster.stats.source_modes",
              "data_stream.auto_sharding",
              "data_stream.failure_store",
              "data_stream.lifecycle.global_retention",
              "data_stream.rollover.lazy",
              "desired_node.version_deprecated",
              "esql.agg_values",
              "esql.async_query",
              "esql.base64_decode_encode",
              "esql.casting_operator",
              "esql.counter_types",
              "esql.disable_nullable_opts",
              "esql.from_options",
              "esql.metadata_fields",
              "esql.metrics_counter_fields",
              "esql.metrics_syntax",
              "esql.mv_ordering_sorted_ascending",
              "esql.mv_sort",
              "esql.resolve_fields_api",
              "esql.spatial_points_from_source",
              "esql.spatial_shapes",
              "esql.st_centroid_agg",
              "esql.st_contains_within",
              "esql.st_disjoint",
              "esql.st_intersects",
              "esql.st_x_y",
              "esql.string_literal_auto_casting",
              "esql.string_literal_auto_casting_extended",
              "esql.timespan_abbreviations",
              "features_supported",
              "file_settings",
              "flattened.ignore_above_support",
              "geoip.downloader.database.configuration",
              "get_database_configuration_action.multi_node",
              "health.dsl.info",
              "health.extended_repository_indicator",
              "knn_retriever_supported",
              "license-trial-independent-version",
              "linear_retriever_supported",
              "logsdb_telemetry",
              "logsdb_telemetry_stats",
              "mapper.boolean_dimension",
              "mapper.flattened.ignore_above_with_arrays_support",
              "mapper.ignore_above_index_level_setting",
              "mapper.index_sorting_on_nested",
              "mapper.keyword_dimension_ignore_above",
              "mapper.keyword_normalizer_synthetic_source",
              "mapper.pass_through_priority",
              "mapper.query_index_mode",
              "mapper.range.null_values_off_by_one_fix",
              "mapper.segment_level_fields_stats",
              "mapper.source.synthetic_source_copy_to_fix",
              "mapper.source.synthetic_source_copy_to_inside_objects_fix",
              "mapper.source.synthetic_source_fallback",
              "mapper.source.synthetic_source_stored_fields_advance_fix",
              "mapper.source.synthetic_source_with_copy_to_and_doc_values_false",
              "mapper.subobjects_auto",
              "mapper.subobjects_auto_fixes",
              "mapper.synthetic_source_keep",
              "mapper.track_ignored_source",
              "mapper.vectors.bbq",
              "mapper.vectors.bit_vectors",
              "mapper.vectors.int4_quantization",
              "put_database_configuration_action.ipinfo",
              "query_rule_list_types",
              "query_rule_retriever_supported",
              "query_rules.test",
              "random_reranker_retriever_supported",
              "repositories.supports_usage_stats",
              "rest.capabilities_action",
              "rest.local_only_capabilities",
              "retrievers_supported",
              "routing.boolean_routing_path",
              "routing.multi_value_routing_path",
              "rrf_retriever_composition_supported",
              "rrf_retriever_supported",
              "script.hamming",
              "script.term_stats",
              "search.vectors.k_param_supported",
              "security.migration_framework",
              "security.queryable_built_in_roles",
              "security.role_mapping_cleanup",
              "security.roles_metadata_flattened",
              "semantic_text.default_elser_2",
              "semantic_text.search_inference_id",
              "simulate.component.template.substitutions",
              "simulate.ignored.fields",
              "simulate.index.template.substitutions",
              "simulate.mapping.addition",
              "simulate.mapping.validation",
              "simulate.mapping.validation.templates",
              "simulate.support.non.template.mapping",
              "slm.interval_schedule",
              "snapshot.repository_verify_integrity",
              "standard_retriever_supported",
              "stats.include_disk_thresholds",
              "text_similarity_reranker_retriever_composition_supported",
              "text_similarity_reranker_retriever_supported",
              "tsdb.ts_routing_hash_doc_value_parse_byte_ref",
              "unified_highlighter_matched_fields",
              "usage.data_tiers.precalculate_stats"
            ],
            "node_id": "saOB8sNLTpO_e-swjuRA9A"
          }
        ],
        "nodes_versions": [
          {
            "mappings_versions": {
              ".async-search": {
                "hash": -1403744380,
                "version": 0
              },
              ".connector-secrets-1": {
                "hash": -745394230,
                "version": 1
              },
              ".fleet-actions-7": {
                "hash": -2624357,
                "version": 2
              },
              ".fleet-agents-7": {
                "hash": 140496850,
                "version": 2
              },
              ".fleet-artifacts-7": {
                "hash": -1593703898,
                "version": 1
              },
              ".fleet-enrollment-api-keys-7": {
                "hash": -1804942283,
                "version": 2
              },
              ".fleet-policies-7": {
                "hash": -201702522,
                "version": 2
              },
              ".fleet-policies-leader-7": {
                "hash": -1108172796,
                "version": 1
              },
              ".fleet-secrets-7": {
                "hash": -745394230,
                "version": 1
              },
              ".fleet-servers-7": {
                "hash": -916922632,
                "version": 1
              },
              ".geoip_databases": {
                "hash": -305757839,
                "version": 1
              },
              ".inference": {
                "hash": -1459421596,
                "version": 2
              },
              ".logstash": {
                "hash": -1058806351,
                "version": 1
              },
              ".ml-config": {
                "hash": -319778629,
                "version": 1
              },
              ".ml-inference-000005": {
                "hash": 919553140,
                "version": 3
              },
              ".ml-meta": {
                "hash": -613742866,
                "version": 2
              },
              ".query-rules-2": {
                "hash": -1272560824,
                "version": 2
              },
              ".search-app-1": {
                "hash": -501711141,
                "version": 1
              },
              ".secrets-inference": {
                "hash": -1434574148,
                "version": 1
              },
              ".security-7": {
                "hash": -832976091,
                "version": 3
              },
              ".security-profile-8": {
                "hash": -909540896,
                "version": 2
              },
              ".security-tokens-7": {
                "hash": 576296021,
                "version": 1
              },
              ".snapshot-blob-cache": {
                "hash": 632712485,
                "version": 1
              },
              ".synonyms-2": {
                "hash": -888080772,
                "version": 1
              },
              ".tasks": {
                "hash": -945584329,
                "version": 0
              },
              ".transform-internal-007": {
                "hash": 1144737897,
                "version": 1
              },
              ".triggered_watches": {
                "hash": -502826165,
                "version": 1
              },
              ".watches": {
                "hash": -1045118511,
                "version": 1
              }
            },
            "node_id": "saOB8sNLTpO_e-swjuRA9A",
            "transport_version": "8841020"
          }
        ],
        "repository_cleanup": {
          "repository_cleanup": [
          ]
        },
        "restore": {
          "snapshots": [
          ]
        },
        "routing_nodes": {
          "nodes": {
            "saOB8sNLTpO_e-swjuRA9A": [
              {
                "allocation_id": {
                  "id": "YkF__kyfR9OXZiD-BMVQwA"
                },
                "index": "test_index",
                "node": "saOB8sNLTpO_e-swjuRA9A",
                "primary": true,
                "recovery_source": {
                  "type": "EMPTY_STORE"
                },
                "relocating_node": null,
                "relocation_failure_info": {
                  "failed_attempts": 0
                },
                "shard": 0,
                "state": "INITIALIZING",
                "unassigned_info": {
                  "allocation_status": "deciders_no",
                  "at": "2025-04-26T10:20:17.391Z",
                  "delayed": false,
                  "details": "failed shard on node [saOB8sNLTpO_e-swjuRA9A]: failed recovery, failure org.elasticsearch.indices.recovery.RecoveryFailedException: [test_index][0]: Recovery failed on {instance}{saOB8sNLTpO_e-swjuRA9A}{OpSUjR1SR9SBKMt8-NoSTQ}{instance}{172.18.0.2}{172.18.0.2:9300}{cdfhilmrstw}{8.19.0}{7000099-8527000}{ml.allocated_processors_double=2.0, ml.machine_memory=16762277888, ml.config_version=12.0.0, ml.max_jvm_size=1073741824, ml.allocated_processors=2, xpack.installed=true, transform.config_version=10.0.0, testattr=test}\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.IndexShard.lambda$executeRecovery$36(IndexShard.java:3384)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListener$2.onFailure(ActionListener.java:265)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.lambda$recoveryListener$9(StoreRecovery.java:400)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListener$2.onFailure(ActionListener.java:265)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeOnFailure(ActionListenerImplementations.java:75)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.DelegatingActionListener.onFailure(DelegatingActionListener.java:32)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.lambda$internalRecoverFromStore$12(StoreRecovery.java:504)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$DelegatingResponseActionListener.acceptException(ActionListenerImplementations.java:188)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$DelegatingResponseActionListener.onFailure(ActionListenerImplementations.java:193)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeOnFailure(ActionListenerImplementations.java:75)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.DelegatingActionListener.onFailure(DelegatingActionListener.java:32)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$RunBeforeActionListener.onFailure(ActionListenerImplementations.java:346)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener$FailureResult.complete(SubscribableListener.java:399)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener.tryComplete(SubscribableListener.java:311)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener.addListener(SubscribableListener.java:210)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener.addListener(SubscribableListener.java:175)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.internalRecoverFromStore(StoreRecovery.java:500)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.recoverFromStore(StoreRecovery.java:96)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.IndexShard.recoverFromStore(IndexShard.java:2514)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionRunnable$4.doRun(ActionRunnable.java:101)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:1044)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:27)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n\tat java.base/java.lang.Thread.run(Thread.java:1447)\nCaused by: [test_index/2hvR5o_xQFK4SBRTWL4xzA][[test_index][0]] org.elasticsearch.index.shard.IndexShardRecoveryException: failed to recover from gateway\n\t... 21 more\nCaused by: [.synonyms] org.elasticsearch.index.IndexNotFoundException: no such index [.synonyms]\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.notFoundException(IndexNameExpressionResolver.java:676)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.ensureAliasOrIndexExists(IndexNameExpressionResolver.java:1327)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.resolveExpressionsToResources(IndexNameExpressionResolver.java:371)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:488)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:475)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ResolvedIndices.resolveWithIndexNamesAndOptions(ResolvedIndices.java:179)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ResolvedIndices.resolveWithIndicesRequest(ResolvedIndices.java:155)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.search.TransportSearchAction.executeRequest(TransportSearchAction.java:358)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:325)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:123)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:135)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.ActionFilter$Simple.apply(ActionFilter.java:54)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:132)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.MappedActionFilters$MappedFilterChain.proceed(MappedActionFilters.java:71)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.MappedActionFilters.apply(MappedActionFilters.java:49)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:132)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction.handleExecution(TransportAction.java:96)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:59)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.tasks.TaskManager.registerAndExecute(TaskManager.java:197)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.node.NodeClient.executeLocally(NodeClient.java:106)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.node.NodeClient.doExecute(NodeClient.java:84)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.support.AbstractClient.execute(AbstractClient.java:140)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.FilterClient.doExecute(FilterClient.java:56)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.OriginSettingClient.doExecute(OriginSettingClient.java:44)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.support.AbstractClient.execute(AbstractClient.java:140)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionRequestBuilder.execute(ActionRequestBuilder.java:55)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.synonyms.SynonymsManagementAPIService.getSynonymSetRules(SynonymsManagementAPIService.java:232)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.analysis.Analysis.getReaderFromIndex(Analysis.java:377)\n\tat org.elasticsearch.analysis.common@8.19.0-SNAPSHOT/org.elasticsearch.analysis.common.SynonymTokenFilterFactory$SynonymsSource$2.getRulesReader(SynonymTokenFilterFactory.java:77)\n\tat org.elasticsearch.analysis.common@8.19.0-SNAPSHOT/org.elasticsearch.analysis.common.SynonymTokenFilterFactory.getChainAwareTokenFilterFactory(SynonymTokenFilterFactory.java:196)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.analysis.AnalyzerComponents.createComponents(AnalyzerComponents.java:83)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.analysis.ReloadableCustomAnalyzer.reload(ReloadableCustomAnalyzer.java:141)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.analysis.IndexAnalyzers$1.reload(IndexAnalyzers.java:162)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.mapper.MapperService.reloadSearchAnalyzers(MapperService.java:826)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.indices.IndicesService$3.beforeIndexShardRecovery(IndicesService.java:645)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.CompositeIndexEventListener.lambda$iterateBeforeIndexShardRecovery$12(CompositeIndexEventListener.java:303)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.CompositeIndexEventListener.callListeners(CompositeIndexEventListener.java:269)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.CompositeIndexEventListener.iterateBeforeIndexShardRecovery(CompositeIndexEventListener.java:300)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.CompositeIndexEventListener.beforeIndexShardRecovery(CompositeIndexEventListener.java:327)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.IndexShard.preRecovery(IndexShard.java:1800)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListener.run(ActionListener.java:454)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener.newForked(SubscribableListener.java:133)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.internalRecoverFromStore(StoreRecovery.java:421)\n\t... 8 more\n",
                  "last_node": "saOB8sNLTpO_e-swjuRA9A",
                  "reason": "MANUAL_ALLOCATION"
                }
              },
              {
                "allocation_id": {
                  "id": "Ea4Fd51pQTesL89Z8q0BzQ"
                },
                "index": ".synonyms-2",
                "node": "saOB8sNLTpO_e-swjuRA9A",
                "primary": true,
                "relocating_node": null,
                "relocation_failure_info": {
                  "failed_attempts": 0
                },
                "shard": 0,
                "state": "STARTED"
              }
            ]
          },
          "unassigned": [
          ]
        },
        "routing_table": {
          "indices": {
            ".synonyms-2": {
              "shards": {
                "0": [
                  {
                    "allocation_id": {
                      "id": "Ea4Fd51pQTesL89Z8q0BzQ"
                    },
                    "index": ".synonyms-2",
                    "node": "saOB8sNLTpO_e-swjuRA9A",
                    "primary": true,
                    "relocating_node": null,
                    "relocation_failure_info": {
                      "failed_attempts": 0
                    },
                    "shard": 0,
                    "state": "STARTED"
                  }
                ]
              }
            },
            "test_index": {
              "shards": {
                "0": [
                  {
                    "allocation_id": {
                      "id": "YkF__kyfR9OXZiD-BMVQwA"
                    },
                    "index": "test_index",
                    "node": "saOB8sNLTpO_e-swjuRA9A",
                    "primary": true,
                    "recovery_source": {
                      "type": "EMPTY_STORE"
                    },
                    "relocating_node": null,
                    "relocation_failure_info": {
                      "failed_attempts": 0
                    },
                    "shard": 0,
                    "state": "INITIALIZING",
                    "unassigned_info": {
                      "allocation_status": "deciders_no",
                      "at": "2025-04-26T10:20:17.391Z",
                      "delayed": false,
                      "details": "failed shard on node [saOB8sNLTpO_e-swjuRA9A]: failed recovery, failure org.elasticsearch.indices.recovery.RecoveryFailedException: [test_index][0]: Recovery failed on {instance}{saOB8sNLTpO_e-swjuRA9A}{OpSUjR1SR9SBKMt8-NoSTQ}{instance}{172.18.0.2}{172.18.0.2:9300}{cdfhilmrstw}{8.19.0}{7000099-8527000}{ml.allocated_processors_double=2.0, ml.machine_memory=16762277888, ml.config_version=12.0.0, ml.max_jvm_size=1073741824, ml.allocated_processors=2, xpack.installed=true, transform.config_version=10.0.0, testattr=test}\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.IndexShard.lambda$executeRecovery$36(IndexShard.java:3384)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListener$2.onFailure(ActionListener.java:265)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.lambda$recoveryListener$9(StoreRecovery.java:400)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListener$2.onFailure(ActionListener.java:265)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeOnFailure(ActionListenerImplementations.java:75)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.DelegatingActionListener.onFailure(DelegatingActionListener.java:32)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.lambda$internalRecoverFromStore$12(StoreRecovery.java:504)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$DelegatingResponseActionListener.acceptException(ActionListenerImplementations.java:188)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$DelegatingResponseActionListener.onFailure(ActionListenerImplementations.java:193)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeAcceptException(ActionListenerImplementations.java:64)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations.safeOnFailure(ActionListenerImplementations.java:75)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.DelegatingActionListener.onFailure(DelegatingActionListener.java:32)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListenerImplementations$RunBeforeActionListener.onFailure(ActionListenerImplementations.java:346)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener$FailureResult.complete(SubscribableListener.java:399)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener.tryComplete(SubscribableListener.java:311)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener.addListener(SubscribableListener.java:210)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener.addListener(SubscribableListener.java:175)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.internalRecoverFromStore(StoreRecovery.java:500)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.recoverFromStore(StoreRecovery.java:96)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.IndexShard.recoverFromStore(IndexShard.java:2514)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionRunnable$4.doRun(ActionRunnable.java:101)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.common.util.concurrent.ThreadContext$ContextPreservingAbstractRunnable.doRun(ThreadContext.java:1044)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.common.util.concurrent.AbstractRunnable.run(AbstractRunnable.java:27)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1095)\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:619)\n\tat java.base/java.lang.Thread.run(Thread.java:1447)\nCaused by: [test_index/2hvR5o_xQFK4SBRTWL4xzA][[test_index][0]] org.elasticsearch.index.shard.IndexShardRecoveryException: failed to recover from gateway\n\t... 21 more\nCaused by: [.synonyms] org.elasticsearch.index.IndexNotFoundException: no such index [.synonyms]\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.notFoundException(IndexNameExpressionResolver.java:676)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.ensureAliasOrIndexExists(IndexNameExpressionResolver.java:1327)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.resolveExpressionsToResources(IndexNameExpressionResolver.java:371)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:488)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.cluster.metadata.IndexNameExpressionResolver.concreteIndices(IndexNameExpressionResolver.java:475)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ResolvedIndices.resolveWithIndexNamesAndOptions(ResolvedIndices.java:179)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ResolvedIndices.resolveWithIndicesRequest(ResolvedIndices.java:155)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.search.TransportSearchAction.executeRequest(TransportSearchAction.java:358)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:325)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.search.TransportSearchAction.doExecute(TransportSearchAction.java:123)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:135)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.ActionFilter$Simple.apply(ActionFilter.java:54)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:132)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.MappedActionFilters$MappedFilterChain.proceed(MappedActionFilters.java:71)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.MappedActionFilters.apply(MappedActionFilters.java:49)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction$RequestFilterChain.proceed(TransportAction.java:132)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction.handleExecution(TransportAction.java:96)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.TransportAction.execute(TransportAction.java:59)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.tasks.TaskManager.registerAndExecute(TaskManager.java:197)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.node.NodeClient.executeLocally(NodeClient.java:106)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.node.NodeClient.doExecute(NodeClient.java:84)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.support.AbstractClient.execute(AbstractClient.java:140)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.FilterClient.doExecute(FilterClient.java:56)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.OriginSettingClient.doExecute(OriginSettingClient.java:44)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.client.internal.support.AbstractClient.execute(AbstractClient.java:140)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionRequestBuilder.execute(ActionRequestBuilder.java:55)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.synonyms.SynonymsManagementAPIService.getSynonymSetRules(SynonymsManagementAPIService.java:232)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.analysis.Analysis.getReaderFromIndex(Analysis.java:377)\n\tat org.elasticsearch.analysis.common@8.19.0-SNAPSHOT/org.elasticsearch.analysis.common.SynonymTokenFilterFactory$SynonymsSource$2.getRulesReader(SynonymTokenFilterFactory.java:77)\n\tat org.elasticsearch.analysis.common@8.19.0-SNAPSHOT/org.elasticsearch.analysis.common.SynonymTokenFilterFactory.getChainAwareTokenFilterFactory(SynonymTokenFilterFactory.java:196)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.analysis.AnalyzerComponents.createComponents(AnalyzerComponents.java:83)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.analysis.ReloadableCustomAnalyzer.reload(ReloadableCustomAnalyzer.java:141)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.analysis.IndexAnalyzers$1.reload(IndexAnalyzers.java:162)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.mapper.MapperService.reloadSearchAnalyzers(MapperService.java:826)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.indices.IndicesService$3.beforeIndexShardRecovery(IndicesService.java:645)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.CompositeIndexEventListener.lambda$iterateBeforeIndexShardRecovery$12(CompositeIndexEventListener.java:303)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.CompositeIndexEventListener.callListeners(CompositeIndexEventListener.java:269)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.CompositeIndexEventListener.iterateBeforeIndexShardRecovery(CompositeIndexEventListener.java:300)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.CompositeIndexEventListener.beforeIndexShardRecovery(CompositeIndexEventListener.java:327)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.IndexShard.preRecovery(IndexShard.java:1800)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.ActionListener.run(ActionListener.java:454)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.action.support.SubscribableListener.newForked(SubscribableListener.java:133)\n\tat org.elasticsearch.server@8.19.0-SNAPSHOT/org.elasticsearch.index.shard.StoreRecovery.internalRecoverFromStore(StoreRecovery.java:421)\n\t... 8 more\n",
                      "last_node": "saOB8sNLTpO_e-swjuRA9A",
                      "reason": "MANUAL_ALLOCATION"
                    }
                  }
                ]
              }
            }
          }
        },
        "snapshot_deletions": {
          "snapshot_deletions": [
          ]
        },
        "snapshots": {
          "node_ids_for_removal": [
          ],
          "snapshots": [
          ]
        },
        "state_uuid": "A9yaaaBWQRGkxdIPwcyuhg",
        "version": 13424
      }
    },
    "statusCode": 200
  }
}