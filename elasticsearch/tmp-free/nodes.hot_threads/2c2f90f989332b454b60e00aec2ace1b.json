{
  "api": "nodes.hot_threads",
  "file": "/test/free/nodes.hot_threads/10_basic.yml",
  "name": "Nodes hot threads - BLOCK",
  "origin": "yaml",
  "request": {
    "args": {
      "type": "block"
    }
  },
  "response": {
    "headers": {
      "content-encoding": "gzip",
      "content-type": "text/plain; charset=UTF-8",
      "transfer-encoding": "chunked",
      "x-elastic-product": "Elasticsearch"
    },
    "payload": "::: {instance}{xvUXUM8xR-O4rhzZUsOzgw}{cQPS-oKMSgysIbLfbFPFEg}{instance}{172.18.0.2}{172.18.0.2:9300}{cdfhilmrstw}{8.18.2}{7000099-8525000}{ml.max_jvm_size=1073741824, ml.config_version=12.0.0, ml.machine_memory=16762273792, ml.allocated_processors_double=2.0, testattr=test, transform.config_version=10.0.0, xpack.installed=true, ml.allocated_processors=2}\n   Hot threads at 2025-05-28T10:13:48.166Z, interval=500ms, busiestThreads=3, ignoreIdleThreads=true:\n   \n    0.0% (0s out of 500ms) block usage by thread 'Cleaner-0'\n     10/10 snapshots sharing following 8 elements\n       java.base@24/java.lang.Object.wait0(Native Method)\n       java.base@24/java.lang.Object.wait(Object.java:389)\n       java.base@24/java.lang.ref.ReferenceQueue.remove0(ReferenceQueue.java:124)\n       java.base@24/java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:215)\n       java.base@24/jdk.internal.ref.CleanerImpl.run(CleanerImpl.java:140)\n       java.base@24/java.lang.Thread.runWith(Thread.java:1460)\n       java.base@24/java.lang.Thread.run(Thread.java:1447)\n       java.base@24/jdk.internal.misc.InnocuousThread.run(InnocuousThread.java:148)\n\n",
    "statusCode": 200
  }
}