{
  "api": "watcher.query_watches",
  "file": "/test/platinum/watcher/query_watches/10_basic.yml",
  "name": "Test query watches api",
  "origin": "yaml",
  "request": {
    "args": {
      "body": {
      }
    }
  },
  "response": {
    "headers": {
      "content-length": "6326",
      "content-type": "application/json",
      "x-elastic-product": "Elasticsearch"
    },
    "payload": {
      "count": 12,
      "watches": [
        {
          "_id": "my_exe_watch",
          "_primary_term": 1,
          "_seq_no": 13,
          "status": {
            "actions": {
              "email_admin": {
                "ack": {
                  "state": "ackable",
                  "timestamp": "2025-10-15T10:49:58.716Z"
                },
                "last_execution": {
                  "successful": true,
                  "timestamp": "2025-10-15T10:49:58.716Z"
                },
                "last_successful_execution": {
                  "successful": true,
                  "timestamp": "2025-10-15T10:49:58.716Z"
                }
              }
            },
            "execution_state": "executed",
            "last_checked": "2025-10-15T10:49:58.716Z",
            "last_met_condition": "2025-10-15T10:49:58.716Z",
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:49:58.698Z"
            },
            "version": 3
          },
          "watch": {
            "actions": {
              "email_admin": {
                "email": {
                  "profile": "standard",
                  "subject": "404 recently encountered",
                  "to": [
                    "someone@domain.host.com"
                  ]
                },
                "transform": {
                  "script": {
                    "lang": "painless",
                    "source": "return ['foo': 'bar']"
                  }
                }
              }
            },
            "condition": {
              "script": {
                "lang": "painless",
                "source": "ctx.payload.hits.total > 1"
              }
            },
            "input": {
              "chain": {
                "inputs": [
                  {
                    "first": {
                      "search": {
                        "request": {
                          "body": {
                            "query": {
                              "bool": {
                                "filter": {
                                  "range": {
                                    "@timestamp": {
                                      "from": "{{ctx.trigger.scheduled_time}}||-5m",
                                      "to": "{{ctx.trigger.triggered_time}}"
                                    }
                                  }
                                },
                                "must": {
                                  "match": {
                                    "response": 404
                                  }
                                }
                              }
                            }
                          },
                          "indices": [
                            "logstash*"
                          ],
                          "rest_total_hits_as_int": true,
                          "search_type": "query_then_fetch"
                        }
                      }
                    }
                  },
                  {
                    "second": {
                      "transform": {
                        "script": {
                          "lang": "painless",
                          "source": "return [ 'hits' : [ 'total' : ctx.payload.first.hits.total ]]"
                        }
                      }
                    }
                  }
                ]
              }
            },
            "trigger": {
              "schedule": {
                "cron": "0 0 0 1 * ? 2099"
              }
            }
          }
        },
        {
          "_id": "my_json_watch",
          "_primary_term": 1,
          "_seq_no": 18,
          "status": {
            "actions": {
              "logging": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:50:03.371Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:50:03.371Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "logging": {
                "logging": {
                  "level": "info",
                  "text": "{{ctx.payload.test.count}}"
                }
              }
            },
            "condition": {
              "script": {
                "lang": "painless",
                "source": "String s = Json.dump(ctx.payload); Map m = Json.load(s); m.count == 1;"
              }
            },
            "input": {
              "simple": {
                "count": 1
              }
            },
            "transform": {
              "script": {
                "lang": "painless",
                "source": "String s = Json.dump(ctx.payload); Map m = Json.load(s); return ['test': m];"
              }
            },
            "trigger": {
              "schedule": {
                "cron": "0 0 0 1 * ? 2099"
              }
            }
          }
        },
        {
          "_id": "my_logging_watch",
          "_primary_term": 1,
          "_seq_no": 15,
          "status": {
            "actions": {
              "logging": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:49:59.675Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:49:59.675Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "logging": {
                "logging": {
                  "level": "info",
                  "text": "foobar"
                }
              }
            },
            "condition": {
              "script": {
                "lang": "painless",
                "source": "ctx.payload.count == 1"
              }
            },
            "input": {
              "simple": {
                "count": 1
              }
            },
            "trigger": {
              "schedule": {
                "cron": "0 0 0 1 * ? 2099"
              }
            }
          }
        },
        {
          "_id": "other",
          "_primary_term": 1,
          "_seq_no": 56,
          "status": {
            "actions": {
              "test_index": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:57:16.483Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:57:16.483Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "test_index": {
                "index": {
                  "index": "test"
                }
              }
            },
            "condition": {
              "always": {
              }
            },
            "input": {
              "simple": {
                "payload": {
                  "send": "yes"
                }
              }
            },
            "trigger": {
              "schedule": {
                "hourly": {
                  "minute": [
                    0,
                    5
                  ]
                }
              }
            }
          }
        },
        {
          "_id": "watch_without_version_test",
          "_primary_term": 1,
          "_seq_no": 70,
          "status": {
            "actions": {
              "logging": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:57:24.950Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:57:24.950Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "logging": {
                "logging": {
                  "level": "info",
                  "text": "Log me Amadeus!"
                }
              }
            },
            "condition": {
              "always": {
              }
            },
            "input": {
              "http": {
                "request": {
                  "auth": {
                    "basic": {
                      "password": "::es_redacted::",
                      "username": "user"
                    }
                  },
                  "headers": {
                  },
                  "host": "host.domain",
                  "method": "get",
                  "params": {
                  },
                  "path": "/myservice",
                  "port": 9200,
                  "scheme": "http"
                }
              }
            },
            "trigger": {
              "schedule": {
                "cron": "0 0 0 1 * ? 2099"
              }
            }
          }
        },
        {
          "_id": "watch_with_password",
          "_primary_term": 1,
          "_seq_no": 69,
          "status": {
            "actions": {
              "logging": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:57:24.258Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:57:24.258Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "logging": {
                "logging": {
                  "level": "info",
                  "text": "Log me Amadeus!"
                }
              }
            },
            "condition": {
              "always": {
              }
            },
            "input": {
              "http": {
                "request": {
                  "auth": {
                    "basic": {
                      "password": "::es_redacted::",
                      "username": "user"
                    }
                  },
                  "headers": {
                  },
                  "host": "host.domain",
                  "method": "get",
                  "params": {
                  },
                  "path": "/myservice",
                  "port": 9200,
                  "scheme": "http"
                }
              }
            },
            "trigger": {
              "schedule": {
                "cron": "0 0 0 1 * ? 2099"
              }
            }
          }
        },
        {
          "_id": "watch_with_seq_no",
          "_primary_term": 1,
          "_seq_no": 72,
          "status": {
            "actions": {
              "logging": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:57:25.169Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:57:25.169Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "logging": {
                "logging": {
                  "level": "info",
                  "text": "Log me Amadeus!"
                }
              }
            },
            "condition": {
              "always": {
              }
            },
            "input": {
              "http": {
                "request": {
                  "auth": {
                    "basic": {
                      "password": "::es_redacted::",
                      "username": "new_user"
                    }
                  },
                  "headers": {
                  },
                  "host": "host.domain",
                  "method": "get",
                  "params": {
                  },
                  "path": "/myservice",
                  "port": 9200,
                  "scheme": "http"
                }
              }
            },
            "trigger": {
              "schedule": {
                "cron": "0 0 0 1 * ? 2099"
              }
            }
          }
        },
        {
          "_id": "test_watch",
          "_primary_term": 1,
          "_seq_no": 73,
          "status": {
            "actions": {
              "indexme": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:57:25.918Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:57:25.918Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "indexme": {
                "index": {
                  "doc_id": "my-id",
                  "index": "my_test_index"
                }
              }
            },
            "condition": {
              "always": {
              }
            },
            "input": {
              "simple": {
                "foo": "bar"
              }
            },
            "trigger": {
              "schedule": {
                "cron": "0 0 0 1 * ? 2099"
              }
            }
          }
        },
        {
          "_id": "my_watch",
          "_primary_term": 1,
          "_seq_no": 75,
          "status": {
            "actions": {
              "logging": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:57:26.688Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:57:26.688Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "logging": {
                "logging": {
                  "level": "info",
                  "text": "yaml test"
                }
              }
            },
            "condition": {
              "always": {
              }
            },
            "input": {
              "simple": {
                "spam": "eggs"
              }
            },
            "trigger": {
              "schedule": {
                "hourly": {
                  "minute": [
                    0,
                    5
                  ]
                }
              }
            }
          }
        },
        {
          "_id": "my_watch_with_reporting_interval",
          "_primary_term": 1,
          "_seq_no": 83,
          "status": {
            "actions": {
              "email_admin": {
                "ack": {
                  "state": "awaits_successful_execution",
                  "timestamp": "2025-10-15T10:57:30.410Z"
                }
              }
            },
            "state": {
              "active": true,
              "timestamp": "2025-10-15T10:57:30.410Z"
            },
            "version": -1
          },
          "watch": {
            "actions": {
              "email_admin": {
                "email": {
                  "attachments": {
                    "report_csv": {
                      "reporting": {
                        "interval": "66s",
                        "retries": 10,
                        "url": "https://example.com"
                      }
                    }
                  },
                  "profile": "standard",
                  "subject": "Monitoring Report",
                  "to": [
                    "example@example.com"
                  ]
                }
              }
            },
            "condition": {
              "always": {
              }
            },
            "input": {
              "none": {
              }
            },
            "trigger": {
              "schedule": {
                "cron": "0 0 0 1 * ? 2099"
              }
            }
          }
        }
      ]
    },
    "statusCode": 200
  }
}